# -*- coding: utf-8 -*-
"""Chat_Bot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ptTijsxDiyMaMhsoJADVAl0aVEw-igI0
"""

#Instalando o SDK do Google
!pip install -q -U google-generativeai

#Configura√ß√µes iniciais
import google.generativeai as genai

GOOGLE_API_KEY=""
genai.configure(api_key=GOOGLE_API_KEY)

#Listando os modelos dispon√≠veis

for m in genai.list_models():

# Substitua 'YOUR_API_KEY' pela sua chave de API do Google
  if 'generateContent' in m.supported_generation_methods:
    print(m.name)

# Configura√ß√µes de gera√ß√£o
generation_config = {
  "candidate_count": 1, # N√∫mero de candidatos a serem gerados
  "temperature": 0.5,  # Controla a criatividade (0.0 - mais determin√≠stico, 1.0 - mais criativo)
}

# Configura√ß√µes de seguran√ßa - atualmente desabilitadas para demonstra√ß√£o
safety_settings={
    'HATE': 'BLOCK_NONE',
    'HARASSMENT': 'BLOCK_NONE',
    'SEXUAL' : 'BLOCK_NONE',
    'DANGEROUS' : 'BLOCK_NONE'
    }

# Inicializando o modelo Gemini Pro
model = genai.GenerativeModel(model_name='gemini-1.0-pro',
                                  generation_config=generation_config,
                                  safety_settings=safety_settings,)

# Exemplo de gera√ß√£o de texto simples
response = model.generate_content("Que empresa criou o modelo de IA Gemini?")
response.text

# Iniciando um chat interativo
chat = model.start_chat(history=[])

prompt = input('Esperando prompt: ')

# Loop do chat

while prompt != "fim":
  response = chat.send_message(prompt)
  print("Resposta:", response.text, '\n\n')
  prompt = input('Esperando prompt: ')

chat

chat.history # Exibe o hist√≥rico do chat (opcional)

# --- Formata√ß√£o visual do hist√≥rico do chat ---

from IPython.display import HTML
import markdown

def to_cards(message):
  """Formata uma mensagem do chat como um cart√£o visual."""
  role = message.role
  text = message.parts[0].text

  # Usando cores para diferentes roles
  if role == "user":
    color = "#blue"  # Azul claro
    icon = "üë§"
    role = "Usu√°rio"
  elif role == "assistant":
    color = "#c8e6c9"  # Verde claro
    icon = "ü§ñ"
    role = "BOT"
  else:
    color = "#1E1E1E"  # Cinza claro
    icon = "ü§ñ"
    role = "BOT"

  # Adicionando emojis
  if ":)" in text:
    text = text.replace(":)", "üòä")
  if ":(" in text:
    text = text.replace(":(", "üòî")

  # Formatando com HTML e Markdown
  html = f"""
  <div style="background-color: {color}; padding: 10px; border-radius: 5px; margin-bottom: 10px;">
      <span style="font-size: 1.2em;">{icon} <b>{role}:</b></span>
      <p>{markdown.markdown(text)}</p>
  </div>
  """
  # Adiciona o bot√£o "Copiar" apenas se a mensagem for do BOT
  if role == "BOT":
      html += f"""
      <button onclick="copyToClipboard('{text}')"
              style="background-color: transparent;
                      border: none;
                      cursor: pointer;
                      font-size: 0.8em;
                      padding: 5px 10px;
                      margin-left: 10px;
                      border-radius: 3px;
                      color: #5f6368;">
          Copiar
      </button>
      """

  return HTML(html + """
  <script>
    function copyToClipboard(text) {
      navigator.clipboard.writeText(text);
      alert("Texto copiado para a √°rea de transfer√™ncia!");
    }
  </script>
  """)

# Imprimindo o hist√≥rico formatado
for message in chat.history:
  display(to_cards(message))

